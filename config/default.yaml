
    "port": 9001 # the port the proxy server will expose
    
    "target": "http://localhost:9000" # the local target for JSON data that the proxy server will interface to 
    
    "changeOrigin": false # true/false, changes the origin of the host header to the target URL
    
    # EITHER a single string to specify one allowed origin or an asterisk (*) to allow unrestricted access OR a list of regular expression strings matching allowed origins
    # example of a list [ '^https?://geojson\.io', '^https?://example\.com' ] # note in YAML no need to double escape backslashes
    # NOTE if this setting is absent or empty, there is no CORS processing
    "corsAllow": "*" 
    
    # List of JSON fields with location information that will be used to create the GeoJSON Feature geometry (in order of priority). 
    # The search stops when a matching field is found. Allowed keys and values are as follow:
    # "geojson" name of a field with the contents expected to be native geojson eg a PostGIS geometry (and the acceptable GeoJSON "types" it can contain)
    # "point_pair" an array of two long/lat field names (always in that order) which will be used to make a GeoJSON Point
    # "coordinates" name of a field with the contents expected to be an array to be used as the coordinates of the single GeoJSON "type" supplied
    # NOTE if this setting is absent or empty, there is no GeoJSON processing
    "geoFields":  
        - { "geojson": "location", "types": [ "Point" ] }
        - { "geojson": "borders", "types": [ "Polygon", "MultiPolygon" ] }
        - { "point_pair": [ "lng", "lat" ] } 
        - { "point_pair": [ "longitude", "latitude" ] }
        - { "coordinates": "point", "type": "Point" }
        - { "coordinates": "polygon", "type": "Polygon" }
        - { "coordinates": "multipolygon", "type": "MultiPolygon" }
  
    # List of request Accept headers that indicates a GeoJSON FeatureCollection should be returned
    # NOTE if this setting is absent or empty, all output is GeoJSON processed
    "geoCollectionAccept": 
        - "application/geo+json"
        - "vnd/geo+json"
    # List of request Accept headers that indicates a single GeoJSON Feature should be returned (see Postgrest documentation)
    # NOTE if this setting is absent or empty, then only data with Accept set to 'application/vnd.pgrst.object+json' is processed as a  GeoJSON Feature
    "geoFeatureAccept":
        - "application/vnd.pgrst.object+geojson"
    

